# -*- outline -*-
# Last modified: Wed Jul 11 15:23:09 2012 mstenber
# Edit time:     43 min

* Thoughts about the NetKit deficiencies

So what should we able to configure in nodes? And what's not supported by
NetKit right now..

+ ideally, we want to provide _overlays_ for the existing configurations

+ we want IPv4+IPv6 addresses configured within the conf file for non-tap
  interfaces

+ we want auto-configured admin interface addresses (w/o default route)
  [ just magic in the auto-generated startup files ]

+ we want auto-configured hosts files
  [ dump known network topology to the end of /etc/hosts ]
  .. could also make DNS server stuff out of these later on, if desirable

+ we want ~global defaults for each node in lab.conf 'shared'

** Solution

- preprocess some file, produce lab.conf, and subdirectories with
  appropriate content

*** Filesystem content

 - template/

 tname/
    .. contents to be copied to that tname

  tname.setup
    .. setup script for the template instance within lab/
      arguments: TEMPLATEDIR SPECIFICLABDIR INSTANCENAME

      NOTE: it would be nice if results of this were already detected, i.e.
      second run would be NOP

  [ tname.clean - probably skip, as it's maintenance overhead, and we can
    just nuke lab/ from orbit as we feel like it, see main 'make clean' ]

  tname.startup 

  tname.template
     .. default values, i.e. foo = bar, maps to tname[foo]=bar in lab case
        specific conf
        
 - conf/

 somecase.conf
   (see below for syntax - extended lab.conf syntax)

 somecase/
   x/ files
   x.startup
   [x.setup - is this needed? for the time being, I don't see it]

 => 

 - lab/
  somecase/
   lab.conf - autogenerated

*** Specific .conf format changes/additions in the lab=>case case

[template]=templatename
 .. copy stuff from the given template for the instance

[num]=LAB,[parameter,[parameter,[...]]]
 parameter can be

  dhcp = run dhclient

  ip:ipv4 address/netmask = e.g. 1.2.3.4/255.255.255.255, autoconfigure it

  ipv6:ipv6 address/netmask = e.g. fc00:dead:beef::1/64, autoconfigure it

  ipv6route:ipv6 address/netmask space ipv6 address = e.g. fc00::/16 fc00:dead::1
  ipv6ra[:ipv6 address/netmask] = e.g. ipv6ra:fc00:dead:beef::/64, do RAs for
 the prefix (or by default, all prefixes specified for the interface) if
 none supplied)

[gw]=ipv4 address
  add default gw

[ipv6route]= ipv6 address/netmask ipv6 gateway
 add specific route (::/0 can be used for default)

[depend]=other
 boot-time dependency. dhcp also implies this, based on other machines on
 the network w/o dhcp flag

inherit=casename
.. import the whole other case as starting point

*** .template format

inherit = templatename
.. import whole other template as starting point

var = value
